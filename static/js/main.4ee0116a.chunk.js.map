{"version":3,"sources":["navigation/style.module.css","pages/home/index.tsx","pages/hooks/useDebounce/index.tsx","hooks/useDebounce/index.tsx","components/Img/index.tsx","pages/components/ImgWithHeaders/index.tsx","pages/components/CustomSelect/index.tsx","navigation/pages.tsx","navigation/sidebar.tsx","navigation/index.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["module","exports","Home","SyntaxHighlighter","registerLanguage","jsx","typescript","codeUseDebounce","codeUseDebouncedValue","PageUseDebounce","func","dependencies","delay","useState","searchTerm1","setSearchTerm1","searchTerm2","setSearchTerm2","result1","setResult1","result2","setResult2","debouncedValue","value","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebouncedValue","console","log","timeout","className","style","display","maxWidth","flex","marginRight","language","dracula","wrapLongLines","onChange","e","target","Img","props","src","headers","background","children","rest","url","setUrl","a","fetch","data","blob","URL","createObjectURL","fetchImage","backgroundImage","codeImgWithHeaders","PageCustomSelect","pageUseDebounce","name","path","component","pageImgWithHeaders","width","pageCustomSelect","pages","exact","sections","Sidebar","openSection","setOpenSection","activeRoute","setActiveRoute","handleSectionClick","section","undefined","sidebar","map","to","onClick","link","sectionName","active","pageList","open","page","handlePageClick","pageName","MainNavigation","contentContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ee0116a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"style_contentContainer__2VuaW\",\"sidebar\":\"style_sidebar__Pl5Q4\",\"link\":\"style_link__Cxpww\",\"sectionName\":\"style_sectionName__3mGJq\",\"pageList\":\"style_pageList__16dFR\",\"open\":\"style_open__1lsyc\",\"pageName\":\"style_pageName__3bun4\",\"active\":\"style_active__29mLK\"};","function Home() {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Home</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import { useEffect, useState } from \"react\"\r\nimport { useDebounce, useDebouncedValue } from \"../../../hooks/useDebounce\"\r\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\r\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx'\r\nimport typescript from 'react-syntax-highlighter/dist/esm/languages/prism/typescript'\r\nimport dracula from 'react-syntax-highlighter/dist/esm/styles/prism/dracula'\r\n \r\nSyntaxHighlighter.registerLanguage('jsx', jsx)\r\nSyntaxHighlighter.registerLanguage('typescript', typescript)\r\n\r\nfunction PageUseDebounce() {\r\n    \r\n    const [searchTerm1, setSearchTerm1] = useState('')\r\n    const [searchTerm2, setSearchTerm2] = useState('')\r\n\r\n    const [result1, setResult1] = useState('')\r\n    const [result2, setResult2] = useState('')\r\n\r\n    const debouncedValue = useDebouncedValue(searchTerm2, 2000)\r\n\r\n    useDebounce(() => {\r\n        console.log(searchTerm1)\r\n        setResult1(searchTerm1)\r\n    }, [searchTerm1], 2000)\r\n\r\n    useEffect(() => {\r\n        console.log(searchTerm2)\r\n        setResult2(debouncedValue)\r\n    }, [debouncedValue])\r\n\r\n    return (\r\n        <div className='page'>\r\n            <h2>Use debounce</h2>\r\n\r\n            <p>When an user is typing a search term, or an username to make a new profile with, it's common to make a request to the api to return the search result automatically, or check whether the user already exists or not.</p>\r\n            <p>But this can eascily become a heavy load on the backend, as the request is made each time the user types a letter. If the search results has a lot of data, it can rapidly waste the user's data plan and traffic limits of your api host provider.</p>\r\n            <p>Ideally, you want the request to be made after the user stops typing the desired search term. This can be made using debounce functions.</p>\r\n            \r\n            <h4>Debounce the api calls</h4>\r\n            <p>In order to debounce the api calls, we can start a timer that resets when the user types another letter, and executes the function after the specified since the last reset.</p>\r\n\r\n            <h4>In React</h4>\r\n            <p>Debouncing a function is possible using a custom hook, that we'll call <code>useDebounce</code>. It takes a function to be debounced as first parameter, the values we want to watch to check if they have been changed (the search term or username, for example) and, as last parameter, the desired delay in milisseconds.</p>\r\n            <p>As an alternative, we can change a state variable after a desired delay. This can be done with a very similiar hook we'll call <code>useDebouncedValue</code>. The debounced value can be watched on another <code>useEffect</code> hook and execute a function when it changes.</p>\r\n        \r\n            <h4>Examples</h4>\r\n\r\n            <div style={{ display: 'flex', maxWidth: '100%' }}>\r\n                <div style={{ flex: 1, marginRight: '1rem' }}>\r\n                    <h5>useDebounce</h5>\r\n\r\n                    <SyntaxHighlighter language='typescript' style={dracula} wrapLongLines>\r\n                        {codeUseDebounce}\r\n                    </SyntaxHighlighter>\r\n\r\n                    <input value={searchTerm1} onChange={e => setSearchTerm1(e.target.value)} />\r\n                    <p>Value of <code>searchTerm</code>: {searchTerm1}</p>\r\n                    <p>Result: {result1}</p>\r\n                </div>\r\n                <div style={{ flex: 1 }}>\r\n                    <h5>useDebouncedValue</h5>\r\n\r\n                    <SyntaxHighlighter language='typescript' style={dracula} wrapLongLines>\r\n                        {codeUseDebouncedValue}\r\n                    </SyntaxHighlighter>\r\n\r\n                    <input value={searchTerm2} onChange={e => setSearchTerm2(e.target.value)}/>\r\n                    <p>Value of <code>debouncedValue</code>: {debouncedValue}</p>\r\n                    <p>Result: {result2}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst codeUseDebounce =\r\n`const [searchTerm, setSearchTerm] = useState('')\r\nconst [result, setResult] = useState('')\r\n\r\nuseDebounce(() => {\r\n    console.log(searchTerm)\r\n    setResult(searchTerm)\r\n}, [searchTerm], 2000)`\r\n\r\nconst codeUseDebouncedValue =\r\n`const [searchTerm, setSearchTerm] = useState('')\r\nconst [result, setResult] = useState('')\r\nconst debouncedValue = useDebouncedValue(searchTerm, 2000)\r\n\r\nuseEffect(() => {\r\n    console.log(searchTerm)\r\n    setResult(debouncedValue)\r\n}, [debouncedValue])`\r\n\r\nexport default PageUseDebounce","import { useEffect, useState } from \"react\"\r\n\r\nfunction useDebouncedValue<T>(value: T, delay: number) {\r\n\r\n    const [debouncedValue, setDebouncedValue] = useState(value)\r\n\r\n    useEffect(() => {\r\n\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay)\r\n  \r\n        return () => {\r\n            clearTimeout(handler);\r\n        }\r\n\r\n    }, [value, delay])\r\n    \r\n    return debouncedValue\r\n}\r\n\r\nfunction useDebounce(func: () => void, dependencies: any[], delay: number) {\r\n\r\n    useEffect(() => {\r\n\r\n        const timeout = setTimeout(func, delay)\r\n\r\n        return () => clearTimeout(timeout)\r\n\r\n    }, [delay, ...dependencies])\r\n}\r\n\r\nexport { useDebounce, useDebouncedValue }","import { ImgHTMLAttributes, useEffect, useState } from \"react\"\r\n\r\n// https://stackoverflow.com/questions/52915486/load-image-from-server-that-requires-sending-headers\r\n\r\ninterface ImgProps extends ImgHTMLAttributes<HTMLImageElement>{\r\n    onDownloadProgress?: (e: ProgressEvent) => void\r\n    background?: boolean\r\n    headers?: { [header: string]: string }\r\n}\r\n\r\nfunction Img(props: ImgProps) {\r\n    \r\n    const { src, headers, background, children, ...rest } = props\r\n\r\n    const [url, setUrl] = useState('')\r\n\r\n    useEffect(() => { fetchImage() }, [src])    \r\n\r\n    async function fetchImage() {\r\n\r\n        try {\r\n            if (!src) return\r\n\r\n            // const headers = new Headers()\r\n            // if(props.headers)    \r\n            //     Object.entries(props.headers).map(([name, value]) => headers.append(name, value))\r\n\r\n            const data = await fetch(src, { headers })\r\n            const blob = await data.blob()\r\n            const url = URL.createObjectURL(blob)\r\n\r\n            setUrl(url)\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    if (background) return (\r\n        <div style={{ backgroundImage: url }} {...rest}>\r\n            {children}\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <img src={url} {...rest} />\r\n    )\r\n}\r\n\r\nexport { Img }","import { Img } from '../../../components/Img'\r\nimport style from './style.module.css'\r\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\r\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx'\r\nimport typescript from 'react-syntax-highlighter/dist/esm/languages/prism/typescript'\r\nimport dracula from 'react-syntax-highlighter/dist/esm/styles/prism/dracula'\r\n \r\nSyntaxHighlighter.registerLanguage('jsx', jsx)\r\nSyntaxHighlighter.registerLanguage('typescript', typescript)\r\n\r\n// const url = 'https://raw.githubusercontent.com/Vtchoo/development/master/public/images/cars/chevrolet-corvette.jpg'\r\nconst url = 'https://picsum.photos/id/352/3264/2176.jpg'\r\n\r\nfunction PageImgWithHeaders() {\r\n    \r\n    return (\r\n        <div className='page'>\r\n            <h2>Image with http headers</h2>\r\n\r\n            <p>When inserting an image into a page, whe usually provide a source link via the src property of the {'<img>'} component. That way, there's no way to specify headers that should be sent to the api, for example, authorization headers.</p>\r\n            <p>The only way to send data with the default img html component is via url, like http://myapi.com/image.jpg?token=12345abc</p>\r\n            <p>This makes it difficult to reach images that are protected by an api behind a route that requires authentication, or any other information that must be passed through the headers of a request.</p>\r\n            <p>However, it is possible to make a dynamic GET request to the api with javascript including custom headers.</p>\r\n\r\n            <h4>React solution</h4>\r\n            <p>In this page, I present the component {'<Img />'}, which is basically the same as the {'<img>'} tag, but accepting the <code>headers</code> prop, like {'<Img headers />'}</p>\r\n            <p>The component receives the same props as the default img tag plus the <code>headers</code> props.</p>\r\n            <p>As soon as the component is loaded, the <code>fetchImage</code> function in the <code>useEffect</code> collects the <code>src</code> passed through the props and make a GET request with the headers included in<code>props.headers</code>.</p>\r\n            <p>The body of the request is then read, parsed into a Blob and finally given a link via <code>URL.createObjectURL</code>. The obtained URL is then set to the state variable <code>url</code> and displayed by a default {'<img>'} tag.</p>\r\n            \r\n            <h4>The code:</h4>\r\n            <SyntaxHighlighter language='jsx' style={dracula} wrapLongLines>\r\n                {codeImgWithHeaders}\r\n            </SyntaxHighlighter>\r\n            <p>In this component, it was used the default fetch api, but it's possible to use another library to make the request, such as axios.</p>\r\n\r\n            <h4>Example:</h4>\r\n            <p>On the left, there is an image created using {'<img>'} tag, and on the right, with {'<Img headers />'}. The appearence of the images is the same, but the second one actually sends headers along with the request.</p>\r\n            <p>To check this out, open the browser console (usually pressing F12), and go to network tab. You may need to refresh the page to see the requests. One of the images sends the headers to the remote address.</p>\r\n\r\n            <div style={{ display: 'flex' }}>\r\n                <div style={{ flex: 1, marginRight: '1rem' }}>\r\n                    <img style={{ width: '100%' }} src={url}></img>\r\n                    <SyntaxHighlighter language='jsx' style={dracula} wrapLongLines>\r\n                        {`<img src='${url}'></img>`}\r\n                    </SyntaxHighlighter>\r\n                </div>\r\n                <div style={{ flex: 1 }}>\r\n                    <Img style={{ width: '100%' }} src={url} headers={{ 'X-Custom-Header': 'value123' }} />\r\n                    <SyntaxHighlighter language='jsx' style={dracula} wrapLongLines>\r\n                        {`<Img src='${url}' headers={{ 'X-Custom-Header': 'value123' }}></Img>`}\r\n                    </SyntaxHighlighter>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst codeImgWithHeaders =\r\n`interface ImgProps extends ImgHTMLAttributes<HTMLImageElement> {\r\n    headers?: { [header: string]: string }\r\n}\r\n\r\nfunction Img(props: ImgProps) {\r\n    \r\n    const { src, headers, ...rest } = props\r\n    const [url, setUrl] = useState('')\r\n\r\n    useEffect(() => { fetchImage() }, [src])    \r\n\r\n    async function fetchImage() {\r\n        try {\r\n            const data = await fetch(src, { headers })\r\n            const blob = await data.blob()\r\n            const url = URL.createObjectURL(blob)\r\n            setUrl(url)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    return <img src={url} {...rest} />\r\n}\r\n`\r\n\r\nexport default PageImgWithHeaders","function PageCustomSelect() {\r\n    \r\n    return (\r\n        <div>\r\n            Custom select component\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageCustomSelect","import Home from '../pages/home'\r\n\r\nimport PageUseDebounce from \"../pages/hooks/useDebounce\"\r\n\r\nimport PageImgWithHeaders from '../pages/components/ImgWithHeaders'\r\nimport PageCustomSelect from '../pages/components/CustomSelect'\r\n\r\ninterface Page {\r\n    name: string,\r\n    path: string,\r\n    component: () => JSX.Element\r\n    exact?: boolean\r\n}\r\n\r\ninterface Section {\r\n    name: string,\r\n    path?: string,\r\n    component?: () => JSX.Element,\r\n    pages?: Page[]\r\n}\r\n\r\n\r\n\r\n//\r\n// All pages\r\n//\r\n\r\n// Home\r\nconst home: Page = {\r\n    name: 'Home',\r\n    path: '/development/',\r\n    component: Home,\r\n    exact: true\r\n}\r\n\r\n// Hooks\r\nconst pageUseDebounce: Page =  {\r\n    name: 'useDebounce',\r\n    path: '/development/usedebounce',\r\n    component: PageUseDebounce,\r\n}\r\n\r\n// Components\r\nconst pageImgWithHeaders: Page = {\r\n    name: 'Img With Headers',\r\n    path: '/development/imgwithheaders',\r\n    component: PageImgWithHeaders\r\n}\r\nconst pageCustomSelect: Page = {\r\n    name: 'Custom Select',\r\n    path: '/development/select',\r\n    component: PageCustomSelect\r\n}\r\n\r\nconst pages = [\r\n    home,\r\n\r\n    pageUseDebounce,\r\n    \r\n    pageImgWithHeaders,\r\n    pageCustomSelect\r\n]\r\n\r\n//\r\n// Sections\r\n//\r\nconst sections: Section[] = [\r\n    {\r\n        name: 'Home',\r\n        path: '/',\r\n        component: Home\r\n    },\r\n    {\r\n        name: 'Custom hooks',\r\n        pages: [\r\n           pageUseDebounce\r\n        ]\r\n    },\r\n    {\r\n        name: 'Custom components',\r\n        pages: [\r\n            pageImgWithHeaders,\r\n            pageCustomSelect\r\n        ]\r\n    }\r\n]\r\n\r\nexport { sections, pages }\r\nexport type { Section, Page }\r\n","import { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { sections, Section, Page } from './pages'\r\nimport style from './style.module.css'\r\n\r\nfunction Sidebar() {\r\n    \r\n\r\n    const [openSection, setOpenSection] = useState<Section>()\r\n    const [activeRoute, setActiveRoute] = useState('/')\r\n\r\n    function handleSectionClick(section: Section){\r\n        setOpenSection(section === openSection ? undefined : section)\r\n\r\n        if (section.path)\r\n            setActiveRoute(section.path)\r\n    }\r\n\r\n    function handlePageClick(page: Page) {\r\n        setActiveRoute(page.path)\r\n    }\r\n\r\n    return (\r\n        <ul className={style.sidebar}>\r\n            {sections.map(section =>\r\n                <div>\r\n                    {section.path ?\r\n                        <Link to={section.path} onClick={() => handleSectionClick(section)} className={style.link}>\r\n                            <div className={`${style.sectionName} ${activeRoute === section.path && style.active}`}>\r\n                                <span>{section.name}</span>\r\n                            </div>\r\n                        </Link>\r\n                        :\r\n                        <div className={style.sectionName} onClick={() => handleSectionClick(section)}>\r\n                            <span>{section.name}</span>\r\n                        </div>\r\n                    }\r\n                    <div className={`${style.pageList} ${section === openSection && style.open}`}>\r\n                        {section.pages && section.pages.map(page =>\r\n                            <Link to={page.path} className={style.link} onClick={() => handlePageClick(page)}>\r\n                                <div className={`${style.pageName}  ${activeRoute === page.path && style.active}`}>\r\n                                    {page.name}\r\n                                </div>\r\n                            </Link>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import { BrowserRouter, Link, Route, Switch } from 'react-router-dom'\r\nimport { pages } from './pages'\r\nimport Sidebar from './sidebar'\r\nimport style from './style.module.css'\r\n\r\n\r\nfunction MainNavigation() {\r\n    \r\n\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Sidebar />\r\n            <div className={style.contentContainer}>\r\n                \r\n                <Switch>\r\n                    {pages.map(page =>\r\n                        <Route path={page.path} exact={page.exact}>\r\n                            {page.component()}\r\n                        </Route>\r\n                    )}\r\n                </Switch>\r\n               \r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default MainNavigation","import MainNavigation from './navigation'\n\nfunction App() {\n\treturn (\n\t\t<MainNavigation />\n\t)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}